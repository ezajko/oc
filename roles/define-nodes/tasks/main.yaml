- name: Load nodes variables
  include_vars:
    file: nodes.yaml

- name: Check that nodes are defined
  assert:
    that:
      - nodes is defined

- name: Define nodes
  loop: '{{ nodes }}'
  loop_control:
    index_var: i
    loop_var: node
  shell: |
    set -o pipefail
    source /etc/profile.d/xcat.sh
    mkdef -f -t node \
      {{ i | node_name }} \
      ip={{ i | node_ip }} \
      mac={{ node.mac }} \
      {% if service_network_enabled is defined and service_network_enabled %}bmcusername={{ node.ipmi_user | default(ipmi_user) }} \
      bmc={{ i | node_bmc }} \
      bmcpassword={{ node.ipmi_password | default(ipmi_password) }}{% endif %} \
      mgt=ipmi \
      groups=compute,all \
      netboot=xnba \
      arch=x86_64 \
      cons=ipmi serialport=0 serialspeed=115200
      kinit admin <<< "{{ ipadm_password }}"
      ipa host-add  --ip-address={{ i | node_ip }} {{ i | node_name }}.{{ domain_name }}
      ipa host-add-managedby --hosts={{ fqdn }} {{ i | node_name }}.{{ domain_name }}
      makehosts {{ i | node_name }}
      makedhcp {{ i | node_name }}

- name: FreeIPA Create node keytab
  shell: |
    ipa-getkeytab -s {{ fqdn }} -D "cn=Directory Manager" -w {{ ipadm_password }} -p host/{{ i | node_name }}.{{ domain_name }} -k {{ opencattus_path }}/etc/{{ i | node_name }}-krb5.keytab
  loop: '{{ nodes }}'
  loop_control:
    index_var: i
    loop_var: node
  tags:
    - ipa-getkeytab

- name: Add host key to node
  shell: |
    set -o pipefail
    ipa host-mod $(cat {{ opencattus_path }}/xcat/ssh_host_*.pub | awk '{ print $2 }' | xargs -n1 -I% echo --sshpubkey=\'%\' | paste -s) --updatedns {{ i | node_name }}.{{ domain_name }}
  loop: '{{ nodes }}'
  loop_control:
    index_var: i
    loop_var: node
  register: ipahostmod
  failed_when: ipahostmod.rc != 0 and ipahostmod.stderr is not search("no modifications to be performed")
  changed_when: ipahostmod.rc == 0 or ipahostmod.stderr is not search("no modifications to be performed")
  tags:
    - 'node-update-key-ipa'

- name: Configure Infiniband
  when: ib_stack != "none"
  include_tasks: roles/infiniband/tasks/setup-nodes.yaml

- name: Add keytab to compute.synclist
  lineinfile:
    path: '{{ synclist }}'
    create: yes
    line: '{{ opencattus_path }}/etc/{{ i | node_name }}-krb5.keytab -> ({{ i | node_name }}) /etc/krb5.keytab'
  loop: '{{ nodes }}'
  loop_control:
    index_var: i
    loop_var: node

- name: Add compute.synclist to the image
  shell: |
    source /etc/profile.d/xcat.sh
    chdef -t osimage -o {{ genimage_name }} synclists="{{ synclist }}"

- name: Create host group
  shell: |
    kinit admin <<< {{ ipadm_password }}
    ipa hostgroup-add --desc="Compute Nodes" compute
  ignore_errors: yes

- name: Add host to hostgroup
  shell: |
    kinit admin <<< {{ ipadm_password }}
    ipa hostgroup-add-member --hosts={{ i | node_name }}.{{ domain_name }} compute
  ignore_errors: yes
  loop: '{{ nodes }}'
  loop_control:
    loop_var: node
    index_var: i

- name: Configure SSH for HBA on server
  lineinfile:
    state: present
    line: '{{ item }}'
    insertafter: '^Host *'
    path: /etc/ssh/ssh_config
  loop:
    - "\tHostbasedAuthentication yes"
    - "\tEnableSSHKeysign yes"

- name: Add hostbased-auth postscript
  tags:
    - postinstall
  copy:
    dest: "{{ opencattus_path }}/xcat/postinstall/hostbased-auth"
    mode: '0755'
    content: |
      #!/bin/sh

      echo "=======> Post install $0 started"
      # Configure Image Clientside
      grep -E 'EnableSSHKeysign yes'        $IMG_ROOTIMGDIR/etc/ssh/ssh_config || echo -e "\tEnableSSHKeysign yes"        >> $IMG_ROOTIMGDIR/etc/ssh/ssh_config
      grep -E 'HostbasedAuthentication yes' $IMG_ROOTIMGDIR/etc/ssh/ssh_config || echo -e "\tHostbasedAuthentication yes" >> $IMG_ROOTIMGDIR/etc/ssh/ssh_config

      # Configure Image Serverside
      test -f $IMG_ROOTIMGDIR/etc/ssh/shosts.equiv || cat <<EOF2 > $IMG_ROOTIMGDIR/etc/ssh/shosts.equiv
      {{ fqdn }}
      @compute
      EOF2

      sed -e 's/^#HostbasedAuthentication no/HostbasedAuthentication yes/' -i~ $IMG_ROOTIMGDIR/etc/ssh/sshd_config

      # Create the known_hosts file with the keys:
      export DSA_KEY=`cat $IMG_ROOTIMGDIR/etc/ssh/ssh_host_dsa_key.pub | cut -f 2 -d " "`
      export RSA_KEY=`cat $IMG_ROOTIMGDIR/etc/ssh/ssh_host_rsa_key.pub | cut -f 2 -d " "`
      export ECDSA_KEY=`cat $IMG_ROOTIMGDIR/etc/ssh/ssh_host_ecdsa_key.pub | cut -f 2 -d " "`
      export ED25519_KEY=`cat $IMG_ROOTIMGDIR/etc/ssh/ssh_host_ed25519_key.pub | cut -f 2 -d " "`

      ssh-keyscan {{ fqdn }}  > $IMG_ROOTIMGDIR/etc/ssh/ssh_known_hosts
      cat <<EOF2 >> $IMG_ROOTIMGDIR/etc/ssh/ssh_known_hosts
      {{ nodes_prefix }}* ssh-dsa $DSA_KEY
      {{ nodes_prefix }}* ssh-ed25519 $RSA_KEY
      {{ nodes_prefix }}* ecdsa-sha2-nistp256 $ECDSA_KEY
      {{ nodes_prefix }}* ssh-rsa $ED25519_KEY
      EOF2

- name: Add hostbased-auth to image
  shell: |
    source /etc/profile.d/xcat.sh
    chdef -t osimage -o {{ genimage_name }} -p postinstall={{ opencattus_path }}/xcat/postinstall/hostbased-auth
  tags:
    - postinstall

- name: Get package facts
  package_facts: manager=auto

- name: Define hosts in PBS
  when: "'pbspro-server-ohpc' in ansible_facts.packages"
  include_tasks: roles/pbs/tasks/setup-nodes.yaml

- name: Define hosts on Slurm
  when: "'ohpc-slurm-server' in ansible_facts.packages"
  include_tasks: roles/slurm/tasks/setup-nodes.yaml

- name: Install pigz
  yum:
    name: pigz
    state: present

- name: Generate final image
  shell: |
    source /etc/profile.d/xcat.sh
    genimage {{ genimage_name }}
    packimage {{ genimage_name }}
  register: genimage
  tags:
    - genimage
  failed_when: genimage.rc != 0 or (genimage.stderr | lower) is search("error")
  retries: 3
  poll: 300
  async: 3600

- name: Run nodeset on new nodes
  shell: |
    source /etc/profile.d/xcat.sh
    nodeset {{ nodes | length | nodes_names | join(",") }} osimage={{ genimage_name }}

- name: Update dhcpd with nodes
  shell: |
    source /etc/profile.d/xcat.sh
    makedhcp -a
