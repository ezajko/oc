- import_role: name=geerlingguy.mysql
  become: yes

- name: Gather package facts
  package_facts:
    manager: auto

- name: Check if OpenHPC and xCAT are installed
  assert:
    that:
      - "'ohpc-base' in ansible_facts.packages"
      - "'xCAT' in ansible_facts.packages"

- name: Install SLURM
  yum:
    name:
      - ohpc-slurm-server
      - slurm-slurmdbd-ohpc

- name: Configure settings in slurm.conf
  lineinfile:
    regex: "{{ item.regex }}"
    line: "{{ item.line }}"
    state: present
    path: /etc/slurm/slurm.conf
  loop:
    - { line: "ClusterName={{ domain_name }}", regex: "^ClusterName=\S+" }
    - { line: "ControlMachine={{ fqdn }}", regex: "^ControlMachine=\S+" }
    - { line: "ControlAddr={{ fqdn }}", regex: "^ControlAddr=\S+" }
    - { line: "ProctrackType=proctrack/linuxproc", regex: "^ProctrackType=\S+" }
    - { line: "TaskPlugin=task/affinity", regex: "^TaskPlugin=\S+" }
    - { line: "SelectType=select/cons_res", regex: "^SelectType=\S+" }
    - { line: "SelectTypeParameters=CR_Core", regex: "^SelectTypeParameters=\S+" }
    - { line: "JobAcctGatherType=jobacct_gather/linux", regex: "^JobAcctGatherType=\S+" }
    - { line: "JobAcctGatherFrequence=30", regex: "^JobAcctGatherFrequence=\S+" }
    - { line: "AccountStorageType=account_storage/slurmdbd", regex: "^AccountStorageType=\S+" }
    - { line: "ReturnToService=2", regex: "^ReturnToService=\d" }
    
- name: Disable default nodes and partitions
  lineinfile:
    regex: "{{ item }}"
    state: absent
    path: /etc/slurm/slurm.conf
  loop: 
    - NodeName
    - PartitionName

- name: Test slurm configuration
  shell: slurmd -C

- name: Enable ports on firewall
  firewalld:
    port: "{{ item }}"
    permanent: yes
    zone: public
    state: enabled
  loop:
    - "6817/udp"
    - "6817/tcp"
    - "6818/tcp"
    - "6818/tcp"
    - "7321/tcp"
    - "7321/tcp"

- name: Create slurmdbd.conf
  copy:
    remote_src: true
    src: /etc/slurm/slurmdbd.conf.example
    dest: /etc/slurm/slurmdbd.conf
    mode: '0600'

- name: Create log folder
  file:
    state: directory
    path: /var/log/slurm
    owner: slurm

- name: Configure password
  lineinfile:
    path: /etc/slurm/slurmdbd.conf
    state: present
    line: "StoragePass={{ slurm_mysql_password }}"
    regex: "^StoragePass=.*"

- name: Configure retention
  blockinfile:
    path: /etc/slurm/slurmdbd.conf
    state: present
    block: |
      PurgeEventAfter=12months
      PurgeJobAfter=12months
      PurgeResvAfter=2months
      PurgeStepAfter=2months
      PurgeSuspendAfter=1month
      PurgeTXNAfter=12months
      PurgeUsageAfter=12months

- name: Configure MySQL limits
  blockinfile:
    path: /etc/my.cnf.d/innodb.cnf
    state: present
    create: yes
    block: |
      [mysqld]
      innodb_buffer_pool_size=1024M
      innodb_log_file_size=64M
      innodb_lock_wait_timeout=900
  register: innodb_conf

- when: innodb_conf.changed
  block:
  - name: Stop MySQL
    systemd:
      name: mariadb
      state: stopped

  - name: Remove old logs
    shell: rm -rf /var/lib/mysql/ib_logfile*

  - name: Start MySQL
    systemd:
      name: mariadb
      state: started

- name: Enable slurmdbd service
  systemd:
    name: slurmdbd
    state: started
    enabled: yes

- name: Testing sacct
  shell: sacct

- name: Create the cluster, and users to on database
  shell: |
    sacctmgr --immediate add cluster "{{ domain_name }}"
    sacctmgr --immediate add account {{ slurm_user }}
    sacctmgr --immediate add user {{ slurm_user }} defaultaccount={{ slurm_user }}

- name: Create the list of required files to be synced to compute nodes with xCAT
  block:
    - name: Create synclist
      lineinfile:
        create: yes
        path: "{{ synclist }}"
        line: "{{ item }}"
      loop:
        - /etc/slurm/slurm.conf -> /etc/slurm/slurm.conf
        - /etc/munge/munge.key -> /etc/munge/munge.key

- name: Change the operating system image defaults to load the synclist
  shell: |
    source /etc/profile.d/xcat.sh
    chdef -t osimage -o {{ genimage_name }} synclists="{{ synclist }}"

- name: Enable services for SLURM operation
  systemd:
    state: started
    enabled: yes
    name: "{{ item }}"
  with_items:
    - munge
    - slurmctld

- name: Add packages to the image
  lineinfile:
    line: ohpc-slurm-client
    path: "{{ pkglist }}"
    state: present

- name:  Create postinstall script
  copy:
    dest: /opt/versatushpc/xcat/postinstall/slurm
    mode: "0755"
    content: |
      if [ ! -f $IMG_ROOTIMGDIR/etc/systemd/system/slurmd.service ]; then
          cp $IMG_ROOTIMGDIR/usr/lib/systemd/system/slurmd.service $IMG_ROOTIMGDIR/etc/systemd/system/
          sed -e "/\[Unit\]/a\StartLimitBurst=5\nStartLimitIntervalSec=3" \
              -e "/\[Service\]/a\Restart=always\nRestartSec=5"               \
              -i $IMG_ROOTIMGDIR/etc/systemd/system/slurmd.service
          chroot $IMG_ROOTIMGDIR systemctl enable munge
          chroot $IMG_ROOTIMGDIR systemctl enable slurmd
      fi

      if ! grep -q pam_slurm.so $IMG_ROOTIMGDIR/etc/pam.d/sshd; then
          cat >> $IMG_ROOTIMGDIR/etc/pam.d/sshd <<EOF
      # Block queue evasion
      account    required     pam_slurm.so
      EOF
      fi


- name: Add posinstall to the image
  shell: |
    source /etc/profile.d/xcat.sh
    chdef -t osimage -o {{ genimage_name }} -p postinstall=/opt/versatushpc/xcat/postinstall/slurm
