---
- hosts: sms
  gather_facts: no
  vars:
    skip_questions: yes
  pre_tasks:
    - package_facts:
        manager: auto
  tasks:
    - name: Load nodes variables
      include_vars:
        file: nodes.yml

    - name: Check that nodes are defined
      assert:
        that:
          - nodes is defined
          - '"ohpc-slurm-server" in ansible_facts.packages'

    - name: Define nodes
      loop: '{{ nodes }}'
      loop_control:
        index_var: i
        loop_var: node
      shell: |
        source /etc/profile.d/xcat.sh
        mkdef -f -t node \
          {{ nodes_prefix }}{{ nodes_separator }}{{ "%0*d" | format(nodes_padding | int, i+1) }} \
          ip={{ sms_network_ip_start | ipmath(i) }} \
          bmc={{ service_network_ip_start | ipmath(i) }} \
          mac={{ node.mac }} \ 
          {% if service_network_enabled is defined and service_network_enabled %}bmcusername={{ node.ipmi_user | default(ipmi_user) }} \
          bmcpassword={{ node.ipmi_password | default(ipmi_password) }}{% endif %} \
          mgt=ipmi \
          groups=compute,all \
          netboot=xbna \
          arch=x86_64

    - name: Define hosts in PBS
      when: "'pbspro-server-ohpc' in ansible_facts.packages"
      shell: |
        source /etc/profile.d/xcat.sh
        for host in $(nodels); do
          qmgr -c "create node $host"
        done

    - name: Define nodes in Slurm
      when: "'ohpc-slurm-server' in ansible_facts.packages"
      loop: '{{ nodes }}'
      loop_control:
        loop_var: node
        index_var: i
      lineinfile:
        line: 'NodeName={{ nodes_prefix }}{{ nodes_separator }}{{ "%0*d" | format(nodes_padding | int, i+1) }} Sockets={{ node.slurm.Sockets }} CoresPerSocket={{ node.slurm.CoresPerSocket }} ThreadsPerCore={{ node.slurm.ThreadsPerCore }} State=UNKNOWN'
        state: present
        dest: /etc/slurm/slurm.conf

    - name: Define default queue for Slurm
      lineinfile:
        dest: /etc/slurm/slurm.conf
        state: present
        line: 'PartitionName=default Nodes=ALL Default=YES MaxTime=24:00:00 State=UP'

    - name: Create host and attach image
      shell: |
        source /etc/profile.d/xcat.sh
        makehosts

    - name: Run nodeset on new nodes
      loop: '{{ nodes }}'
      loop_control:
        index_var: i
      shell: |
        source /etc/profile.d/xcat.sh
        nodeset osimage=centos7.6-x86_64-netboot-compute {{ nodes_prefix }}{{ nodes_separator }}{{ "%0*d" | format(nodes_padding | int, i+1) }}

    - name: Update dhcpd with nodes
      shell: |
        source /etc/profile.d/xcat.sh
        makedhcp -a
